#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <130>;
};

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        right_b {
            bindings = <&kp B>;
            key-positions = <46 47>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <41 42>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <42 43>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&mt ESC TILDE     &kp N1      &kp N2  &kp N3        &kp N4          &kp N5       &none             &kp N6     &kp N7         &kp N8         &kp N9   &kp N0                    &kp MINUS
&mt CAPSLOCK TAB  &kp Q       &kp W   &kp E         &kp R           &kp T        &none             &kp Y      &kp U          &kp I          &kp O    &kp P                     &kp EQUAL
&kp LEFT_SHIFT    &kp A       &kp S   &kp D         &kp F           &kp G        &kp K_PREVIOUS    &kp H      &kp J          &kp K          &kp L    &mt APOSTROPHE SEMICOLON  &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp Z       &kp X   &kp C         &kp V           &kp B        &kp K_NEXT        &kp N      &kp M          &kp COMMA      &kp DOT  &kp FSLH                  &kp RIGHT_CONTROL
&kp C_MUTE        &kp DELETE  &tog 1  &kp LEFT_ALT  &lt 1 LEFT_GUI  &kp SPACE    &kp K_PLAY_PAUSE  &kp ENTER  &kp BACKSPACE  &kp RIGHT_ALT  &tog 2   &tog 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "QWERTY";
        };

        layer_1 {
            bindings = <
&kp ESC  &kp F1          &kp F2          &kp F3           &kp F4  &kp F5    &trans  &kp F6          &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans   &trans          &kp UP_ARROW    &trans           &trans  &trans    &trans  &trans          &trans  &trans  &trans  &trans   &kp F12
&trans   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans    &trans  &bt BT_CLR_ALL  &trans  &trans  &trans  &trans   &trans
&trans   &trans          &trans          &trans           &trans  &trans    &trans  &trans          &trans  &trans  &trans  &trans   &kp PRINTSCREEN
&trans   &trans          &trans          &trans           &trans  &trans    &trans  &trans          &trans  &trans  &trans  &trans
            >;

            label = "F_LAYER";
        };

        layer_2 {
            bindings = <
&trans  &trans       &trans        &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans       &trans        &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans       &trans        &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans       &trans        &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LC(F11)  &kp LEFT_ALT  &kp SPACE  &trans  &kp M     &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "GAME";
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &rgb_ug RGB_BRI  &trans           &trans           &trans           &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &rgb_ug RGB_BRD  &trans           &trans           &trans           &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &rgb_ug RGB_EFR  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_SPI  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_SPD  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &rgb_ug RGB_TOG  &trans           &trans           &trans           &trans  &trans
            >;

            label = "RGB";
        };
    };
};
